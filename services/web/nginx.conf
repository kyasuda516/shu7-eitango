user  nginx;
worker_processes  auto;

# Accrodig to https://amemo.hatenablog.jp/entry/2019/11/20/213628,
# an error will occur if it is not written before the events directive.
load_module modules/ngx_http_geoip2_module.so;
# [Caution!] GeoIP2 has nothing to do with GeoIP(http://nginx.org/en/docs/http/ngx_http_geoip_module.html)!!!
# The official documentation for the GeoIP2 module is https://github.com/leev/ngx_http_geoip2_module.

# error_log  /var/log/nginx/error.log notice;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # https://www.cloudflare.com/ja-jp/ips/
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 2400:cb00::/32;
    set_real_ip_from 2606:4700::/32;
    set_real_ip_from 2803:f800::/32;
    set_real_ip_from 2405:b500::/32;
    set_real_ip_from 2405:8100::/32;
    set_real_ip_from 2a06:98c0::/29;
    set_real_ip_from 2c0f:f248::/32;
    real_ip_header CF-Connecting-IP;

    # https://github.com/leev/ngx_http_geoip2_module#download-maxmind-geolite2-database-optional
    geoip2 /usr/share/GeoIP/GeoLite2-City.mmdb {
        auto_reload 5m;
        # $geoip2_data_country_code     country iso_code;
        $geoip2_data_country_name     country names en;
        # $geoip2_data_subdivision_code subdivisions iso_code;
        # $geoip2_data_subdivision_name subdivisions names en;
        $geoip2_data_city_name        city names en;
        $geoip2_data_accuracy_radius  location accuracy_radius;
        $geoip2_data_latitude         location latitude;
        $geoip2_data_longitude        location longitude;
    }

    # log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                   '$status $body_bytes_sent "$http_referer" '
    #                   '"$http_user_agent" "$http_x_forwarded_for"';
    log_format ltsv 'time_access:$time_iso8601\t'
                    'remote_addr:$remote_addr\t'
                    'remote_port:$realip_remote_port\t'
                    'remote_user:$remote_user\t'
                    # 'country_code:$geoip2_data_country_code\t'
                    'country_name:$geoip2_data_country_name\t'
                    # 'subdivision_code:$geoip2_data_subdivision_code\t'
                    # 'subdivision_name:$geoip2_data_subdivision_name\t'
                    'city_name:$geoip2_data_city_name\t'
                    'accuracy_radius:$geoip2_data_accuracy_radius\t'
                    'latitude:$geoip2_data_latitude\t'
                    'longitude:$geoip2_data_longitude\t'
                    'request_method:$request_method\t'
                    'request_uri:$request_uri\t'
                    'request_protocol:$server_protocol\t'
                    'status:$status\t'
                    'size:$body_bytes_sent\t'
                    'referer:$http_referer\t'
                    'forwarded_for:$http_x_forwarded_for\t'
                    'request_time:$request_time\t'
                    'user_agent:$http_user_agent';

    # access_log  /var/log/nginx/access.log  main;
    access_log  /var/log/nginx/access.log  ltsv;

    sendfile        on;
    # #tcp_nopush     on;
    tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    upstream app {
        server localhost:3031;
    }

    # Run Grafana behind a reverse proxy: https://grafana.com/tutorials/run-grafana-behind-a-proxy/
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    upstream grafana {
        server localhost:3128;
    }
    
    include /etc/nginx/conf.d/*.conf;
}